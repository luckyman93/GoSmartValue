// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

namespace AV.Persistence.EntityFramework.Migrations
{
    [DbContext(typeof(ValuationsContext))]
    [Migration("20191130215240_AddedActiveFieldTOUser")]
    partial class AddedActiveFieldTOUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AV.Common.Entities.ComparableBandSize", b =>
                {
                    b.Property<string>("BandName")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LowerBandLimit");

                    b.Property<int>("UpperBandLimit");

                    b.HasKey("BandName");

                    b.ToTable("ComparableBandSizes");

                    b.HasData(
                        new
                        {
                            BandName = "LowIncome",
                            LowerBandLimit = 460,
                            UpperBandLimit = 600
                        },
                        new
                        {
                            BandName = "MiddleIncome",
                            LowerBandLimit = 601,
                            UpperBandLimit = 800
                        },
                        new
                        {
                            BandName = "HighIncome",
                            LowerBandLimit = 800,
                            UpperBandLimit = 2147483647
                        });
                });

            modelBuilder.Entity("AV.Common.Entities.ComparableResult", b =>
                {
                    b.Property<Guid>("ReferenceNumber")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("EstimatedPropertyValue");

                    b.Property<Guid?>("PropertyDetailId");

                    b.Property<int>("PropertyDetailsId");

                    b.HasKey("ReferenceNumber");

                    b.HasIndex("PropertyDetailId");

                    b.ToTable("ComparableResults");
                });

            modelBuilder.Entity("AV.Common.Entities.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Area");

                    b.Property<double>("Density");

                    b.Property<string>("Name");

                    b.Property<int>("Population");

                    b.HasKey("Id");

                    b.ToTable("Districts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Area = 28470.0,
                            Density = 6.9465000000000003,
                            Name = "Southern",
                            Population = 197767
                        },
                        new
                        {
                            Id = 2,
                            Area = 1780.0,
                            Density = 47.759999999999998,
                            Name = "South-East",
                            Population = 85014
                        },
                        new
                        {
                            Id = 3,
                            Area = 31100.0,
                            Density = 9.7929999999999993,
                            Name = "Kweneng",
                            Population = 304549
                        },
                        new
                        {
                            Id = 4,
                            Area = 7960.0,
                            Density = 11.515000000000001,
                            Name = "Kgatleng",
                            Population = 91660
                        },
                        new
                        {
                            Id = 5,
                            Area = 142076.0,
                            Density = 4.0546189999999998,
                            Name = "Central",
                            Population = 576064
                        },
                        new
                        {
                            Id = 6,
                            Area = 550.0,
                            Density = 11.77,
                            Name = "North-East",
                            Population = 60264
                        },
                        new
                        {
                            Id = 7,
                            Area = 109130.0,
                            Density = 1.39544,
                            Name = "Ngamiland",
                            Population = 152284
                        },
                        new
                        {
                            Id = 8,
                            Area = 20800.0,
                            Density = 1.5249999999999999,
                            Name = "Chobe",
                            Population = 23347
                        },
                        new
                        {
                            Id = 9,
                            Area = 117910.0,
                            Density = 0.36549100000000001,
                            Name = "Ghanzi",
                            Population = 43095
                        },
                        new
                        {
                            Id = 10,
                            Area = 105200.0,
                            Density = 0.48243000000000003,
                            Name = "Kgalagadi",
                            Population = 50752
                        });
                });

            modelBuilder.Entity("AV.Common.Entities.Locality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LocationId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Localities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationId = 33,
                            Name = "BBS Mall"
                        },
                        new
                        {
                            Id = 2,
                            LocationId = 33,
                            Name = "block 3"
                        },
                        new
                        {
                            Id = 3,
                            LocationId = 33,
                            Name = "Block 4"
                        },
                        new
                        {
                            Id = 4,
                            LocationId = 33,
                            Name = "Block 5"
                        },
                        new
                        {
                            Id = 5,
                            LocationId = 33,
                            Name = "Block 6"
                        },
                        new
                        {
                            Id = 6,
                            LocationId = 33,
                            Name = "block 7"
                        },
                        new
                        {
                            Id = 7,
                            LocationId = 33,
                            Name = "block 8"
                        },
                        new
                        {
                            Id = 8,
                            LocationId = 33,
                            Name = "Block 9"
                        },
                        new
                        {
                            Id = 9,
                            LocationId = 33,
                            Name = "Block 10"
                        },
                        new
                        {
                            Id = 10,
                            LocationId = 33,
                            Name = "Broadhurst"
                        },
                        new
                        {
                            Id = 11,
                            LocationId = 33,
                            Name = "Broadhurst (Ginger)"
                        },
                        new
                        {
                            Id = 12,
                            LocationId = 33,
                            Name = "Commerce park"
                        },
                        new
                        {
                            Id = 13,
                            LocationId = 33,
                            Name = "Ext 11"
                        },
                        new
                        {
                            Id = 14,
                            LocationId = 33,
                            Name = "Ext 12"
                        },
                        new
                        {
                            Id = 15,
                            LocationId = 33,
                            Name = "Ext 14"
                        },
                        new
                        {
                            Id = 16,
                            LocationId = 33,
                            Name = "Ext 19"
                        },
                        new
                        {
                            Id = 17,
                            LocationId = 33,
                            Name = "Ext 16"
                        },
                        new
                        {
                            Id = 18,
                            LocationId = 33,
                            Name = "Ext 25"
                        },
                        new
                        {
                            Id = 19,
                            LocationId = 33,
                            Name = "Ext 9"
                        },
                        new
                        {
                            Id = 20,
                            LocationId = 33,
                            Name = "Gaborone west"
                        },
                        new
                        {
                            Id = 21,
                            LocationId = 33,
                            Name = "Gaborone"
                        },
                        new
                        {
                            Id = 22,
                            LocationId = 33,
                            Name = "Kgale view"
                        },
                        new
                        {
                            Id = 23,
                            LocationId = 33,
                            Name = "Mogoditshane"
                        },
                        new
                        {
                            Id = 24,
                            LocationId = 33,
                            Name = "Notwane"
                        },
                        new
                        {
                            Id = 25,
                            LocationId = 33,
                            Name = "Old Naledi"
                        },
                        new
                        {
                            Id = 26,
                            LocationId = 33,
                            Name = "Phakalane"
                        },
                        new
                        {
                            Id = 27,
                            LocationId = 33,
                            Name = "Phase 1"
                        },
                        new
                        {
                            Id = 28,
                            LocationId = 33,
                            Name = "Phase 2"
                        },
                        new
                        {
                            Id = 29,
                            LocationId = 33,
                            Name = "Phase 3"
                        },
                        new
                        {
                            Id = 30,
                            LocationId = 33,
                            Name = "Phase 4"
                        },
                        new
                        {
                            Id = 31,
                            LocationId = 33,
                            Name = "Tlokweng"
                        },
                        new
                        {
                            Id = 32,
                            LocationId = 33,
                            Name = "Tshweneng"
                        },
                        new
                        {
                            Id = 33,
                            LocationId = 33,
                            Name = "Tsholofelo West"
                        },
                        new
                        {
                            Id = 34,
                            LocationId = 33,
                            Name = "Tsholofelo East"
                        },
                        new
                        {
                            Id = 35,
                            LocationId = 33,
                            Name = "Tsholofelo"
                        },
                        new
                        {
                            Id = 36,
                            LocationId = 33,
                            Name = "Taung"
                        },
                        new
                        {
                            Id = 37,
                            LocationId = 33,
                            Name = "Tawana"
                        },
                        new
                        {
                            Id = 38,
                            LocationId = 33,
                            Name = "whitecity"
                        },
                        new
                        {
                            Id = 39,
                            LocationId = 4,
                            Name = "Flowertown"
                        },
                        new
                        {
                            Id = 40,
                            LocationId = 43,
                            Name = "Gaphatshwa"
                        },
                        new
                        {
                            Id = 41,
                            LocationId = 27,
                            Name = "Lekgwapheng"
                        },
                        new
                        {
                            Id = 42,
                            LocationId = 2,
                            Name = "Mafenyatlala"
                        },
                        new
                        {
                            Id = 43,
                            LocationId = 45,
                            Name = "Matebeleng"
                        },
                        new
                        {
                            Id = 44,
                            LocationId = 45,
                            Name = "Modipane"
                        },
                        new
                        {
                            Id = 45,
                            LocationId = 36,
                            Name = "Boatle"
                        },
                        new
                        {
                            Id = 46,
                            LocationId = 36,
                            Name = "Lesetlhana"
                        },
                        new
                        {
                            Id = 47,
                            LocationId = 46,
                            Name = "West Extension"
                        },
                        new
                        {
                            Id = 48,
                            LocationId = 13,
                            Name = "Mere"
                        },
                        new
                        {
                            Id = 49,
                            LocationId = 13,
                            Name = "Morula"
                        },
                        new
                        {
                            Id = 50,
                            LocationId = 15,
                            Name = "matlhabana"
                        },
                        new
                        {
                            Id = 51,
                            LocationId = 28,
                            Name = "Mine stone"
                        },
                        new
                        {
                            Id = 52,
                            LocationId = 28,
                            Name = "Tati River"
                        },
                        new
                        {
                            Id = 53,
                            LocationId = 33,
                            Name = "Partial "
                        },
                        new
                        {
                            Id = 54,
                            LocationId = 33,
                            Name = "Ext 10"
                        },
                        new
                        {
                            Id = 55,
                            LocationId = 33,
                            Name = "Village"
                        },
                        new
                        {
                            Id = 56,
                            LocationId = 33,
                            Name = "Ext 2"
                        },
                        new
                        {
                            Id = 57,
                            LocationId = 33,
                            Name = "Ext 27"
                        },
                        new
                        {
                            Id = 58,
                            LocationId = 33,
                            Name = "Tawana"
                        },
                        new
                        {
                            Id = 59,
                            LocationId = 33,
                            Name = "Ledumang"
                        },
                        new
                        {
                            Id = 60,
                            LocationId = 33,
                            Name = "Block 3 (Industrial)"
                        },
                        new
                        {
                            Id = 61,
                            LocationId = 33,
                            Name = "Gaborone North"
                        });
                });

            modelBuilder.Entity("AV.Common.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DistrictId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DistrictId = 5,
                            Name = "Bobirwa"
                        },
                        new
                        {
                            Id = 2,
                            DistrictId = 5,
                            Name = "Boteti"
                        },
                        new
                        {
                            Id = 3,
                            DistrictId = 5,
                            Name = "Lerala"
                        },
                        new
                        {
                            Id = 4,
                            DistrictId = 5,
                            Name = "Mahalapye"
                        },
                        new
                        {
                            Id = 5,
                            DistrictId = 5,
                            Name = "Mmadinare"
                        },
                        new
                        {
                            Id = 6,
                            DistrictId = 5,
                            Name = "Mmaphashalala"
                        },
                        new
                        {
                            Id = 7,
                            DistrictId = 5,
                            Name = "Mogorosi"
                        },
                        new
                        {
                            Id = 8,
                            DistrictId = 5,
                            Name = "Nata"
                        },
                        new
                        {
                            Id = 9,
                            DistrictId = 5,
                            Name = "Paje"
                        },
                        new
                        {
                            Id = 10,
                            DistrictId = 5,
                            Name = "Rakops"
                        },
                        new
                        {
                            Id = 11,
                            DistrictId = 5,
                            Name = "Sebina"
                        },
                        new
                        {
                            Id = 12,
                            DistrictId = 5,
                            Name = "Sefhare"
                        },
                        new
                        {
                            Id = 13,
                            DistrictId = 5,
                            Name = "Serowe"
                        },
                        new
                        {
                            Id = 14,
                            DistrictId = 5,
                            Name = "Palapye"
                        },
                        new
                        {
                            Id = 15,
                            DistrictId = 5,
                            Name = "Shoshong"
                        },
                        new
                        {
                            Id = 16,
                            DistrictId = 5,
                            Name = "Taupye"
                        },
                        new
                        {
                            Id = 17,
                            DistrictId = 5,
                            Name = "Tonota"
                        },
                        new
                        {
                            Id = 18,
                            DistrictId = 5,
                            Name = "Tutume"
                        },
                        new
                        {
                            Id = 19,
                            DistrictId = 9,
                            Name = "Charleshill"
                        },
                        new
                        {
                            Id = 20,
                            DistrictId = 9,
                            Name = "Ghanzi"
                        },
                        new
                        {
                            Id = 21,
                            DistrictId = 10,
                            Name = "Hukuntsi"
                        },
                        new
                        {
                            Id = 22,
                            DistrictId = 10,
                            Name = "Kang"
                        },
                        new
                        {
                            Id = 50,
                            DistrictId = 10,
                            Name = "Tshabong"
                        },
                        new
                        {
                            Id = 23,
                            DistrictId = 4,
                            Name = "Mmathubudukwane"
                        },
                        new
                        {
                            Id = 24,
                            DistrictId = 4,
                            Name = "Mochudi"
                        },
                        new
                        {
                            Id = 25,
                            DistrictId = 3,
                            Name = "Letlhakeng"
                        },
                        new
                        {
                            Id = 26,
                            DistrictId = 3,
                            Name = "Molepolole"
                        },
                        new
                        {
                            Id = 27,
                            DistrictId = 6,
                            Name = "Francistown"
                        },
                        new
                        {
                            Id = 28,
                            DistrictId = 6,
                            Name = "Masunga"
                        },
                        new
                        {
                            Id = 29,
                            DistrictId = 7,
                            Name = "Ngamiland East"
                        },
                        new
                        {
                            Id = 30,
                            DistrictId = 7,
                            Name = "Ngamiland West"
                        },
                        new
                        {
                            Id = 31,
                            DistrictId = 7,
                            Name = "Okavango"
                        },
                        new
                        {
                            Id = 33,
                            DistrictId = 2,
                            Name = "Gaborone"
                        },
                        new
                        {
                            Id = 32,
                            DistrictId = 2,
                            Name = "Mogobane"
                        },
                        new
                        {
                            Id = 34,
                            DistrictId = 2,
                            Name = "Otse"
                        },
                        new
                        {
                            Id = 35,
                            DistrictId = 2,
                            Name = "Ramotswa"
                        },
                        new
                        {
                            Id = 36,
                            DistrictId = 2,
                            Name = "Tlokweng"
                        },
                        new
                        {
                            Id = 37,
                            DistrictId = 1,
                            Name = "Goodhope"
                        },
                        new
                        {
                            Id = 38,
                            DistrictId = 1,
                            Name = "Jwaneng"
                        },
                        new
                        {
                            Id = 39,
                            DistrictId = 1,
                            Name = "Kanye"
                        },
                        new
                        {
                            Id = 40,
                            DistrictId = 1,
                            Name = "Mabutsane"
                        },
                        new
                        {
                            Id = 41,
                            DistrictId = 1,
                            Name = "Moshupa"
                        },
                        new
                        {
                            Id = 42,
                            DistrictId = 4,
                            Name = "Bokaa"
                        },
                        new
                        {
                            Id = 43,
                            DistrictId = 3,
                            Name = "Metsimotlhabe"
                        },
                        new
                        {
                            Id = 44,
                            DistrictId = 3,
                            Name = "Mmopane"
                        },
                        new
                        {
                            Id = 45,
                            DistrictId = 4,
                            Name = "Oodi"
                        },
                        new
                        {
                            Id = 46,
                            DistrictId = 4,
                            Name = "Rasesa"
                        },
                        new
                        {
                            Id = 47,
                            DistrictId = 3,
                            Name = "Thamaga"
                        },
                        new
                        {
                            Id = 48,
                            DistrictId = 5,
                            Name = "Sandveld"
                        });
                });

            modelBuilder.Entity("AV.Common.Entities.Plot", b =>
                {
                    b.Property<Guid>("PlotId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LandUse");

                    b.Property<string>("PlotNo");

                    b.Property<int>("PolygonId");

                    b.Property<int>("Size");

                    b.Property<int>("StreetId");

                    b.Property<double?>("polygonShapeId");

                    b.HasKey("PlotId");

                    b.HasIndex("StreetId");

                    b.HasIndex("polygonShapeId");

                    b.ToTable("Plots");
                });

            modelBuilder.Entity("AV.Common.Entities.PlotShape", b =>
                {
                    b.Property<double>("ShapeId");

                    b.Property<double>("Height");

                    b.Property<double>("Width");

                    b.HasKey("ShapeId");

                    b.ToTable("Shapes");
                });

            modelBuilder.Entity("AV.Common.Entities.PropertyDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AddedOn");

                    b.Property<string>("BandClassBandName");

                    b.Property<int>("DataState");

                    b.Property<DateTime?>("Date");

                    b.Property<DateTime>("DateOfSale");

                    b.Property<int>("LandUse");

                    b.Property<string>("Latitude");

                    b.Property<int>("LocalityId");

                    b.Property<int>("LocationId");

                    b.Property<string>("Longitude");

                    b.Property<int>("PlotId");

                    b.Property<Guid?>("PlotId1");

                    b.Property<string>("PlotNo");

                    b.Property<int>("PlotSize");

                    b.Property<Guid?>("PropertyDetailId");

                    b.Property<int>("PropertyType");

                    b.Property<int>("SalePrice");

                    b.Property<int?>("StreetId");

                    b.Property<string>("StreetName");

                    b.HasKey("Id");

                    b.HasIndex("BandClassBandName");

                    b.HasIndex("LocalityId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PlotId1");

                    b.HasIndex("PropertyDetailId");

                    b.ToTable("PropertyDetails");
                });

            modelBuilder.Entity("AV.Common.Entities.Street", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LocalityId");

                    b.Property<string>("StreetName");

                    b.HasKey("Id");

                    b.HasIndex("LocalityId");

                    b.ToTable("Streets");
                });

            modelBuilder.Entity("AV.Common.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<bool>("Active");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("AV.Common.Entities.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c6719053-6f69-4f07-8f1c-1e48274c241d"),
                            ConcurrencyStamp = "c5b2bad0-bf7a-431a-ae8a-72e23eba7ef9",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("112b90a5-f498-468e-8c69-d0872990c124"),
                            ConcurrencyStamp = "3bdd011a-3da7-43b9-82bd-41e0c7b1f483",
                            Name = "client",
                            NormalizedName = "CLIENT"
                        },
                        new
                        {
                            Id = new Guid("4f4d4102-e3ba-4ae7-96d8-7ff4a783abdd"),
                            ConcurrencyStamp = "e8c280f6-ca7f-499e-bdab-7b82b707bbef",
                            Name = "analyst",
                            NormalizedName = "ANALYST"
                        },
                        new
                        {
                            Id = new Guid("2187d0cb-0ac9-45e5-acd4-89dc6968bb71"),
                            ConcurrencyStamp = "2d07a4d9-984d-4eb7-bcfb-7edfdf6c54e6",
                            Name = "manager",
                            NormalizedName = "MANAGER"
                        },
                        new
                        {
                            Id = new Guid("a15c3499-2e2e-4193-98a0-cce0867d1348"),
                            ConcurrencyStamp = "1c66bfdc-078a-4eab-9223-912e279230ab",
                            Name = "user",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("AV.Common.Entities.Valuation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DifferentiatorNotes");

                    b.Property<string>("Host");

                    b.Property<string>("LandUse");

                    b.Property<string>("LocalityName");

                    b.Property<int>("LocationId");

                    b.Property<string>("PlotNo");

                    b.Property<string>("PropertyType");

                    b.Property<DateTimeOffset?>("RequestDate");

                    b.Property<string>("RequestProperties");

                    b.Property<string>("RequestUri");

                    b.Property<decimal>("Size");

                    b.Property<int>("SizeUnitsTypeID");

                    b.Property<string>("Source");

                    b.Property<int>("ValuationAmount");

                    b.Property<DateTime>("ValuationDate");

                    b.Property<string>("ValuationType");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Valuations");
                });

            modelBuilder.Entity("AV.Common.Entities.ValuationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ClientId");

                    b.Property<DateTime>("DateOfSale");

                    b.Property<string>("Host");

                    b.Property<int>("LandUse");

                    b.Property<int>("LocalityId");

                    b.Property<int>("LocationId");

                    b.Property<string>("PlotNo");

                    b.Property<int>("PlotSize");

                    b.Property<Guid?>("PropertyDetailId");

                    b.Property<string>("PropertyType");

                    b.Property<int>("PurchasePrice");

                    b.Property<DateTime>("RequestDate");

                    b.Property<string>("StreetName");

                    b.Property<long?>("ValuationId");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("LocalityId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PropertyDetailId");

                    b.HasIndex("ValuationId");

                    b.ToTable("ValuationRequests");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<Guid>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("AV.Common.Entities.ClientUser", b =>
                {
                    b.HasBaseType("AV.Common.Entities.User");

                    b.HasDiscriminator().HasValue("ClientUser");
                });

            modelBuilder.Entity("AV.Common.Entities.ComparableResult", b =>
                {
                    b.HasOne("AV.Common.Entities.PropertyDetail", "PropertyDetail")
                        .WithMany()
                        .HasForeignKey("PropertyDetailId");
                });

            modelBuilder.Entity("AV.Common.Entities.Locality", b =>
                {
                    b.HasOne("AV.Common.Entities.Location")
                        .WithMany("LocalAreas")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AV.Common.Entities.Location", b =>
                {
                    b.HasOne("AV.Common.Entities.District", "District")
                        .WithMany("Regions")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AV.Common.Entities.Plot", b =>
                {
                    b.HasOne("AV.Common.Entities.Street", "Street")
                        .WithMany("Plots")
                        .HasForeignKey("StreetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AV.Common.Entities.PlotShape", "polygon")
                        .WithMany()
                        .HasForeignKey("polygonShapeId");
                });

            modelBuilder.Entity("AV.Common.Entities.PropertyDetail", b =>
                {
                    b.HasOne("AV.Common.Entities.ComparableBandSize", "BandClass")
                        .WithMany()
                        .HasForeignKey("BandClassBandName");

                    b.HasOne("AV.Common.Entities.Locality", "Locality")
                        .WithMany()
                        .HasForeignKey("LocalityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AV.Common.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AV.Common.Entities.Plot", "Plot")
                        .WithMany("PropertyDetails")
                        .HasForeignKey("PlotId1");

                    b.HasOne("AV.Common.Entities.PropertyDetail")
                        .WithMany("Comparables")
                        .HasForeignKey("PropertyDetailId");
                });

            modelBuilder.Entity("AV.Common.Entities.Street", b =>
                {
                    b.HasOne("AV.Common.Entities.Locality", "Locality")
                        .WithMany("Streets")
                        .HasForeignKey("LocalityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AV.Common.Entities.Valuation", b =>
                {
                    b.HasOne("AV.Common.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AV.Common.Entities.ValuationRequest", b =>
                {
                    b.HasOne("AV.Common.Entities.ClientUser", "Client")
                        .WithMany("ValuationRequests")
                        .HasForeignKey("ClientId");

                    b.HasOne("AV.Common.Entities.Locality", "Locality")
                        .WithMany()
                        .HasForeignKey("LocalityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AV.Common.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AV.Common.Entities.PropertyDetail", "PropertyDetail")
                        .WithMany()
                        .HasForeignKey("PropertyDetailId");

                    b.HasOne("AV.Common.Entities.Valuation", "Valuation")
                        .WithMany()
                        .HasForeignKey("ValuationId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("AV.Common.Entities.UserRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("AV.Common.Entities.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("AV.Common.Entities.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("AV.Common.Entities.UserRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AV.Common.Entities.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("AV.Common.Entities.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
