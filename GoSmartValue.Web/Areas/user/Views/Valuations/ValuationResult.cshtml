@using AV.Common.Entities
@using AV.Contracts.Enums
@model AV.Contracts.Models.Valuation.ComparableResultViewModel

@functions {

    private int GetIntValue(FeatureType featureType)
    {
        return (int)featureType;
    }

}

@{
    ViewBag.Title = "Valuation Estimate";
    Layout = "_Layout";
}

<div class="outer container-fluid image-container set-full-height" style="background-image: url(/Canva.jpg);">
    <div class="middle container-fluid" style="padding-top: 3%">
        <div class=" inner container-fluid" style="min-height: 500px; margin: auto; max-width: 1090px; max-height: 100%;">

            @if (Model.EstimatedValue < 1 || Model.ReportType == "InstantReport" || Model.ReportType == "DetailedReport")
            {
                @if (Model.EstimatedValue < 1)
                {
                    <form method="get" style="background-color:transparent!important">
                        <fieldset style="padding-top: 10px;">
                            <div class="alert col-12 col-md-8 offset-md-2 alert-success">
                                <div class="text-center p-2">
                                    <strong>Thank you!</strong>
                                </div>
                                <div class="card-body">
                                    There is insufficient data to generate an automated valuation for your location.
                                    <br>You may instruct a detailed valuation to know the value of your property.
                                </div>
                                <div class="text-center">
	                                @Html.ActionLink("Get detailed report", 
	                                    "IssueInstruction", 
	                                    "Valuations", new {id = Model.ComparableResultId}
		                                , new { @class = "btn btn-blue" })
                                </div>
                            </div>
                        </fieldset>
                    </form>
                }
                else
                {
                    @if (Model.ReportType == "InstantReport")
                    {
                        <fieldset>
                            <div class="alert alert-success">
                                <strong>Thank you!</strong>
                                <p>
                                    Your request has been received.
                                    <br>Your instant report has been emailed.
                                </p>
                            </div>
                        </fieldset>
                    }
                    else
                    {
                        <fieldset>
                            <div class="alert alert-success">
                                <strong>Thank you!</strong>
                                <p>
                                    Your detailed report will be sent
                                    <br>within 1 hour of confirmation of property details
                                    <br>by a registered valuer.
                                </p>
                                <p>Thank you.</p>
                            </div>
                        </fieldset>
                    }
                }

            }
            else
            {
                <form action="/" method="post" style="background-color: transparent !important">
                    <div class="card col-md-8 offset-md-2 container-fluid shadow" style="background-color: #ffffff;">
                        <div class="container-fluid">

                            <!-- One "tab" for each step in the form: -->
                            <div class="tab card-body valuation-result-tab-card">
                                <div class="card-body">
                                    <div class="form-group col-sm-12" style="text-align: center; color: #12971c">
                                        <h3 class="info-text">Congratulations!!! </h3>
                                        <h3 class="info-text">Properties in your area sell for:</h3>
                                    </div>

                                    <div class="form-group col">
                                        <label for="Estimate">Estimated Value(Pula) in BWP: </label>
                                        <input type="text" id="Estimate" readonly="readonly" disabled="disabled" height="200" style="text-align: right; font-size: 24px;color:#1a237e" value="@Model.EstimatedValue.ToString("BWP 0,00")" asp-for="@Model.EstimatedValue" asp-format="{0:N}" class="form-control pull-right form-control-lg" />
                                    </div>
                                    <p class="form-group col">
                                        <label>Valuation Reference:</label><span style="font-size: 18px; color: #000000"> @Model.ReferenceNumber.ToString().Substring(0, 8).ToUpper()</span>
                                    </p>
                                    <div class="col-sm-12" style="text-align: center">
                                        <p class="form-group col">
                                            <span class="text-danger" style="font-family: 'Segoe UI'; font-size: 14px; font-weight: 600">Please take note of this reference number above</span>
                                        </p>
                                    </div>
                                </div>
                            </div>

                            <div style="overflow: auto;">
                                <div style="float: right; padding-right: 12px;">
                                    @*<button type="submit" class="btn btn-blue btn-lg" asp-controller="Valuations" asp-action="FullReportRequestGet" asp-all-route-data="Model.ComparableResultId.ToString()">Get Detailed Report</button>*@
                                    @Html.ActionLink("Get report", "FullReportRequestGet", "Valuations", new { id = Model.ComparableResultId }
                                        , new { @class = "btn btn-blue" })
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            }
        </div>
    </div>
</div>
<script>

    var currentTab = 0; // Current tab is set to be the first tab (0)

    $(document).ready(function () {
        showTab(currentTab); // Display the current tab
    });

    function SetPropertyFeatures() {
        $('#Features')
            .find('option')
            .remove();

        $('#property-features input:checked').each(function () {
            var feature = $(this);
            $('#FeatureFields').append('<input id="PropertyFeatures" name="PropertyFeatures" value="' +
                feature.val() +
                '" hidden="hidden" />');
        });
    };

    function showTab(n) {
        // This function will display the specified tab of the form ...
        var x = document.getElementsByClassName("tab");
        x[n].style.display = "block";
        // ... and fix the Previous/Next buttons:
        if (n === 0) {
            document.getElementById("prevBtn").style.display = "none";
            document.getElementById("nextBtn").innerHTML = "Get Valuation Report";

        } else {
            document.getElementById("prevBtn").style.display = "inline";
            document.getElementById("nextBtn").innerHTML = "Next";
        }
        if (n === (x.length - 1)) {
            document.getElementById("makeReportRequestBtn").style.display = "inline";
            document.getElementById("nextBtn").style.display = "none";
        } else {
            document.getElementById("nextBtn").style.display = "inline";
            document.getElementById("makeReportRequestBtn").style.display = "none";
            SetPropertyFeatures();
        }
        // ... and run a function that displays the correct step indicator:
        fixStepIndicator(n);
    };

    function nextPrev(n) {
        // This function will figure out which tab to display
        var x = document.getElementsByClassName("tab");
        // Exit the function if any field in the current tab is invalid:
        if (n === 1 && !validateForm()) return false;
        // Hide the current tab:
        x[currentTab].style.display = "none";
        // Increase or decrease the current tab by 1:
        currentTab = currentTab + n;
        // if you have reached the end of the form... :
        if (currentTab >= x.length) {
            //...the form gets submitted:
            document.getElementById("regForm").submit();
            return false;
        }
        // Otherwise, display the correct tab:
        showTab(currentTab);
        return true;
    };

    function validateForm() {
        // This function deals with validation of the form fields
        var x, y, i, valid = true;
        x = document.getElementsByClassName("tab");
        y = x[currentTab].getElementsByTagName("input");
        // A loop that checks every input field in the current tab:
        for (i = 0; i < y.length; i++) {
            // If a field is empty...
            if (y[i].value === "") {
                // add an "invalid" class to the field:
                y[i].className += " invalid";
                // and set the current valid status to false:
                valid = false;
            }
        }
        // If the valid status is true, mark the step as finished and valid:
        if (valid) {
            document.getElementsByClassName("step")[currentTab].className += " finish";
        }
        return valid; // return the valid status
    };

    function fixStepIndicator(n) {
        // This function removes the "active" class of all steps...
        var i, x = document.getElementsByClassName("step");
        for (i = 0; i < x.length; i++) {
            x[i].className = x[i].className.replace(" active", "");
        }
        //... and adds the "active" class to the current step:
        x[n].className += " active";
    };
</script>
<script src="~/js/jquery.price_format.1.8.min.js"></script>